<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jvsheng</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://jvsheng.github.io/blog/"/>
  <updated>2017-09-27T06:50:11.923Z</updated>
  <id>http://jvsheng.github.io/blog/</id>
  
  <author>
    <name>Jvsheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Element-ui源码分析 - loading</title>
    <link href="http://jvsheng.github.io/blog/2017/09/27/Element-ui%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-loading/"/>
    <id>http://jvsheng.github.io/blog/2017/09/27/Element-ui源码分析-loading/</id>
    <published>2017-09-27T06:48:08.000Z</published>
    <updated>2017-09-27T06:50:11.923Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Element-ui源码分析 - util.clickoutside</title>
    <link href="http://jvsheng.github.io/blog/2017/09/27/Element-ui%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-util-clickoutside/"/>
    <id>http://jvsheng.github.io/blog/2017/09/27/Element-ui源码分析-util-clickoutside/</id>
    <published>2017-09-27T06:46:01.000Z</published>
    <updated>2017-09-27T08:41:18.634Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>es6-export、闭包<br><a id="more"></a></p><h2 id="es6-export、闭包"><a href="#es6-export、闭包" class="headerlink" title="es6-export、闭包"></a>es6-export、闭包</h2></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;es6-export、闭包&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Element-ui源码分析 - 单元测试</title>
    <link href="http://jvsheng.github.io/blog/2017/09/24/Element-ui%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    <id>http://jvsheng.github.io/blog/2017/09/24/Element-ui源码分析-单元测试/</id>
    <published>2017-09-23T16:27:07.000Z</published>
    <updated>2017-09-27T08:29:11.957Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.测试的工具函数<br>2.如何测试自定义指令<br>3.Mocha测试框架<br>4.Chai断言库<br><a id="more"></a></p></blockquote><h2 id="测试的工具函数"><a href="#测试的工具函数" class="headerlink" title="测试的工具函数"></a>测试的工具函数</h2><h2 id="如何测试自定义指令"><a href="#如何测试自定义指令" class="headerlink" title="如何测试自定义指令"></a>如何测试自定义指令</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">it(<span class="string">'create'</span>, () =&gt; &#123;</div><div class="line">  <span class="keyword">let</span> count = <span class="number">0</span>;</div><div class="line">  <span class="keyword">const</span> el = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</div><div class="line">  <span class="keyword">const</span> vnode = &#123;</div><div class="line">    context: &#123;</div><div class="line">      handleClick: <span class="function"><span class="params">()</span> =&gt;</span> ++count</div><div class="line">    &#125;</div><div class="line">  &#125;;</div><div class="line">  <span class="keyword">const</span> binding = &#123;</div><div class="line">    expression: <span class="string">'handleClick'</span></div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  Clickoutside.bind(el, binding, vnode);</div><div class="line">  expect(el[ctx]).to.exist;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>这需要跳出Vue的思维，观察源代码，可以发现，自定义指令的js文件中只是export了bind、update、unbind方法，但是绑定指令到Vue是通过<code>directives: { Clickoutside }</code>。  </p><p>所以，<code>可以直接调用bind等方法，进行元素指令的绑定</code>，就可以编写相应的测试用例了。</p><h2 id="Mocha测试框架"><a href="#Mocha测试框架" class="headerlink" title="Mocha测试框架"></a>Mocha测试框架</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">describe(<span class="string">'Array'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  describe(<span class="string">'#indexOf()'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    it(<span class="string">'should return -1 when the value is not present'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">      expect([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>].indexOf(<span class="number">5</span>)).to.equal(<span class="number">-1</span>);</div><div class="line">    &#125;);</div><div class="line">  &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p><code>describe函数</code>的第一个参数会被输出在控制台中，作为一个用例集的描述，而且这个描述是可以根据自己的需求来嵌套输出的，称之为：<code>用例集定义函数</code>。</p><p><code>it函数</code>第一个参数用来输出一个用例的描述，前边打个对勾代表测试通过，第二个参数是一个函数，用来编写用例内容，用断言模块来判断结果的正确性，称之为：<code>用例函数</code>。<br><img src="/blog/img/17.9.27.png" alt="测试运行结果"></p><h2 id="Chai断言库"><a href="#Chai断言库" class="headerlink" title="Chai断言库"></a>Chai断言库</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">expect(<span class="number">4</span> + <span class="number">5</span>).to.be.equal(<span class="number">9</span>);</div></pre></td></tr></table></figure><p>下面是一些目前遇到的断言语法：</p><ul><li>equal(value) - 断言目标严格等于(===)value </li><li>exist - 断言目标存在，即非null也非undefined  </li></ul><p>断言的使用都是相同的套路，<code>to</code>是链接词，没有其他的作用，只是提高可读性。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;1.测试的工具函数&lt;br&gt;2.如何测试自定义指令&lt;br&gt;3.Mocha测试框架&lt;br&gt;4.Chai断言库&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
